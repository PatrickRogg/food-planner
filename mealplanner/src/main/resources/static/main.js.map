{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.constants.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/ingredient-create-edit/ingredient-create-edit.component.html","webpack:///./src/app/ingredient-create-edit/ingredient-create-edit.component.scss","webpack:///./src/app/ingredient-create-edit/ingredient-create-edit.component.ts","webpack:///./src/app/ingredient-list/ingredient-list.component.html","webpack:///./src/app/ingredient-list/ingredient-list.component.scss","webpack:///./src/app/ingredient-list/ingredient-list.component.ts","webpack:///./src/app/meal-create-edit/meal-create-edit.component.html","webpack:///./src/app/meal-create-edit/meal-create-edit.component.scss","webpack:///./src/app/meal-create-edit/meal-create-edit.component.ts","webpack:///./src/app/meal-list/meal-list.component.html","webpack:///./src/app/meal-list/meal-list.component.scss","webpack:///./src/app/meal-list/meal-list.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.scss","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/shared/models/ingredient-detail.model.ts","webpack:///./src/app/shared/models/ingredient.model.ts","webpack:///./src/app/shared/models/meal.model.ts","webpack:///./src/app/shared/services/api/ingredient-detail-api.service.ts","webpack:///./src/app/shared/services/api/meal-api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { IngredientCreateEditComponent } from './ingredient-create-edit/ingredient-create-edit.component';\r\nimport { MealCreateEditComponent } from './meal-create-edit/meal-create-edit.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: HomeComponent},\r\n    { path: 'create-meal', component: MealCreateEditComponent },\r\n    { path: 'edit-meal/:id', component: MealCreateEditComponent },\r\n    { path: 'create-ingredient', component: IngredientCreateEditComponent },\r\n    { path: 'edit-ingredient/:id', component: IngredientCreateEditComponent },\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <router-outlet></router-outlet>\\n</div>\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontend-desktop';\n}\n","const API_URL = 'http://localhost:8080/api/';\r\n\r\nexport const MEAL_API_URL = API_URL + 'meals/';\r\nexport const INGREDIENT_API_URL = API_URL + 'ingredients/';\r\nexport const INGREDIENT_DETAIL_API_URL = API_URL + 'ingredient-details/';\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { IngredientCreateEditComponent } from './ingredient-create-edit/ingredient-create-edit.component';\nimport { MealCreateEditComponent } from './meal-create-edit/meal-create-edit.component';\nimport { MealListComponent } from './meal-list/meal-list.component';\nimport { IngredientListComponent } from './ingredient-list/ingredient-list.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    IngredientCreateEditComponent,\n    MealCreateEditComponent,\n    MealListComponent,\n    IngredientListComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <button class=\\\"btn btn-success my-3\\\" routerLink=\\\"/create-meal\\\">Create Meal</button>\\n    <app-meal-list></app-meal-list>\\n  </div>\\n  <div class=\\\"col-6\\\">\\n    <button class=\\\"btn btn-success my-3\\\" routerLink=\\\"/create-ingredient\\\">Create Ingredient</button>\\n    <app-ingredient-list></app-ingredient-list>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <h3 class=\\\"mb-5\\\">{{title}} IngredientDetail</h3>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\">Designation</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Tomato\\\" [(ngModel)]=\\\"ingredientDetail.designation\\\">\\n  </div>\\n  <div class=\\\"row pt-5\\\">\\n    <div class=\\\"col-12 text-right\\\">\\n      <button class=\\\"btn btn-lg btn-primary\\\" (click)=\\\"submitForm()\\\">Submit</button>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { IngredientDetail } from '../shared/models/ingredient-detail.model';\nimport { Router } from '@angular/router';\nimport { IngredientDetailApiService } from '../shared/services/api/ingredient-detail-api.service';\n\n@Component({\n  selector: 'app-ingredient-create-edit',\n  templateUrl: './ingredient-create-edit.component.html',\n  styleUrls: ['./ingredient-create-edit.component.scss']\n})\nexport class IngredientCreateEditComponent implements OnInit {\n  title = 'Create ';\n  ingredientDetail: IngredientDetail;\n  constructor(\n    private ingredientDetailApiService: IngredientDetailApiService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.ingredientDetail = new IngredientDetail('');\n  }\n\n  public submitForm() {\n    if (this.ingredientDetail.designation !== '') {\n      this.ingredientDetailApiService\n        .create(this.ingredientDetail).subscribe(data => {\n          this.router.navigate(['']);\n        });\n    }\n  }\n}\n","module.exports = \"<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Designation</th>\\n      <th></th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let ingredientDetail of ingredientDetails\\\">\\n      <td>{{ingredientDetail.id}}</td>\\n      <td>{{ingredientDetail.designation}}</td>\\n      <td><button class=\\\"btn btn-primary\\\" (click)=\\\"editIngredientDetail(ingredientDetail)\\\">Edit</button></td>\\n      <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteIngredientDetail(ingredientDetail)\\\">Delete</button></td>\\n    </tr>\\n  </tbody>\\n</table>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { IngredientDetail } from 'src/app/shared/models/ingredient-detail.model';\nimport { IngredientDetailApiService } from '../shared/services/api/ingredient-detail-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-ingredient-list',\n  templateUrl: './ingredient-list.component.html',\n  styleUrls: ['./ingredient-list.component.scss']\n})\nexport class IngredientListComponent implements OnInit {\n  ingredientDetails: IngredientDetail[] = [];\n\n  constructor(\n    private ingredientDetailApiService: IngredientDetailApiService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.getAllIngredientDetailsFromServer();\n  }\n\n  private getAllIngredientDetailsFromServer() {\n    this.ingredientDetailApiService.getAll().subscribe(data => this.ingredientDetails = data);\n  }\n\n  public editIngredientDetail(ingredientDetail: IngredientDetail) {\n    this.router.navigate(['ingredient-edit', ingredientDetail.id]);\n  }\n\n  public deleteIngredientDetail(ingredientDetail: IngredientDetail) {\n    this.ingredientDetailApiService.deleteBy(ingredientDetail.id).subscribe(data => this.getAllIngredientDetailsFromServer());\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <h3 class=\\\"mb-5\\\">{{title}} Meal</h3>\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" style=\\\"width: 140px !important\\\">Designation</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Spaghetti Bolonese\\\" [(ngModel)]=\\\"meal.designation\\\">\\n  </div>\\n  <div class=\\\"input-group-prepend mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" style=\\\"width: 140px !important\\\">Recipe Url</span>\\n    </div>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"https://google.com\\\" [(ngModel)]=\\\"meal.recipeUrl\\\">\\n  </div>\\n\\n  <div class=\\\"input-group mb-3\\\">\\n    <div class=\\\"input-group-prepend\\\">\\n      <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\" style=\\\"width: 140px !important\\\">IngredientDetail</label>\\n    </div>\\n    <select class=\\\"custom-select mr-3\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"toAddIngredient.ingredientDetail\\\">\\n      <option [ngValue]=\\\"ingredientDetail\\\" *ngFor=\\\"let ingredientDetail of ingredientDetails\\\">{{ingredientDetail.designation}}</option>\\n    </select>\\n\\n    <div class=\\\"input-group-prepend\\\">\\n      <span class=\\\"input-group-text\\\" style=\\\"width: 140px !important\\\">Quantity</span>\\n    </div>\\n    <input type=\\\"number\\\" class=\\\"form-control mr-3\\\" [(ngModel)]=\\\"toAddIngredient.quantity\\\">\\n\\n    <div class=\\\"input-group-prepend\\\">\\n      <label class=\\\"input-group-text\\\" for=\\\"inputGroupSelect01\\\" style=\\\"width: 140px !important\\\">Ingredient</label>\\n    </div>\\n    <select class=\\\"custom-select  mr-3\\\" id=\\\"inputGroupSelect01\\\" [(ngModel)]=\\\"toAddIngredient.unit\\\">\\n      <option value=\\\"g\\\">Gramm</option>\\n      <option value=\\\"kg\\\">Kilogramm</option>\\n      <option value=\\\"pcs\\\">Pieces</option>\\n      <option value=\\\"l\\\">Liter</option>\\n    </select>\\n\\n    <button class=\\\"btn btn-success btn-sm\\\" (click)=\\\"addIngredient()\\\">Add</button>\\n  </div>\\n\\n  <table class=\\\"table mt-3\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">Designation</th>\\n        <th scope=\\\"col\\\">Quantity</th>\\n        <th></th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let ingredient of meal.ingredients; let i = index\\\">\\n        <td>{{i + 1}}</td>\\n        <td>{{ingredient.ingredientDetail.designation}}</td>\\n        <td>{{ingredient.quantity}} {{ingredient.unit}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <div class=\\\"row pt-5\\\">\\n    <div class=\\\"col-12 text-right\\\">\\n      <button class=\\\"btn btn-lg btn-primary\\\" (click)=\\\"submitForm()\\\">Submit</button>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Meal } from '../shared/models/meal.model';\nimport { Router } from '@angular/router';\nimport { MealApiService } from '../shared/services/api/meal-api.service';\nimport { Ingredient } from '../shared/models/ingredient.model';\nimport { IngredientDetail } from '../shared/models/ingredient-detail.model';\nimport { IngredientDetailApiService } from '../shared/services/api/ingredient-detail-api.service';\n\n@Component({\n  selector: 'app-meal-create-edit',\n  templateUrl: './meal-create-edit.component.html',\n  styleUrls: ['./meal-create-edit.component.scss']\n})\nexport class MealCreateEditComponent implements OnInit {\n  title = 'Create ';\n  meal: Meal;\n  toAddIngredient: Ingredient;\n  ingredientDetails: IngredientDetail[] = [];\n\n  constructor(\n    private mealApiService: MealApiService,\n    private ingredientDetailsApiService: IngredientDetailApiService,\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.meal = new Meal('', '', []);\n    this.toAddIngredient = new Ingredient(null, 0, 'g');\n    this.getAllIngredientDetailsFromServer();\n  }\n\n  private getAllIngredientDetailsFromServer() {\n    this.ingredientDetailsApiService.getAll().subscribe(data => this.ingredientDetails = data);\n  }\n\n  public submitForm() {\n    if (this.meal.designation !== '') {\n      this.mealApiService\n        .create(this.meal).subscribe(data => {\n          this.router.navigate(['']);\n        });\n    }\n  }\n\n  public addIngredient() {\n    this.meal.ingredients.push(this.toAddIngredient);\n    this.toAddIngredient = new Ingredient(null, 0, 'g');\n  }\n\n}\n","module.exports = \"<table class=\\\"table\\\">\\n  <thead>\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">Designation</th>\\n      <th scope=\\\"col\\\">Url</th>\\n      <th scope=\\\"col\\\">Ingredients</th>\\n      <th></th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let meal of meals\\\">\\n      <td>{{meal.id}}</td>\\n      <td>{{meal.designation}}</td>\\n      <td><a href=\\\"{{meal.recipeUrl}}\\\">{{meal.recipeUrl}}</a></td>\\n      <td>{{meal.ingredients.length}}</td>\\n      <td><button class=\\\"btn btn-primary\\\" (click)=\\\"editMeal(meal)\\\">Edit</button></td>\\n      <td><button class=\\\"btn btn-danger\\\" (click)=\\\"deleteMeal(meal)\\\">Delete</button></td>\\n    </tr>\\n  </tbody>\\n</table>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Meal } from '../shared/models/meal.model';\nimport { MealApiService } from '../shared/services/api/meal-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-meal-list',\n  templateUrl: './meal-list.component.html',\n  styleUrls: ['./meal-list.component.scss']\n})\nexport class MealListComponent implements OnInit {\n  meals: Meal[] = [];\n\n  constructor(\n    private mealApiService: MealApiService,\n    private router: Router,\n    ) { }\n\n  ngOnInit() {\n    this.getAllMealsFromServer();\n  }\n\n  private getAllMealsFromServer() {\n    this.mealApiService.getAll().subscribe(data => this.meals = data);\n  }\n\n  public editMeal(meal: Meal) {\n    this.router.navigate(['meal-edit', meal.id]);\n  }\n\n  public deleteMeal(meal: Meal) {\n    this.mealApiService.deleteBy(meal.id).subscribe(data => this.getAllMealsFromServer());\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-dark bg-danger mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Mealplanner</a>\\n</nav>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class IngredientDetail {\r\n    id: number;\r\n    constructor(public designation: string) { }\r\n}","import { IngredientDetail } from './ingredient-detail.model';\r\n\r\nexport class Ingredient {\r\n    id: number;\r\n    constructor(public ingredientDetail: IngredientDetail, public quantity: number, public unit: string) { }\r\n}","import { Ingredient } from './ingredient.model';\r\n\r\nexport class Meal {\r\n    id: number;\r\n    constructor(\r\n        public designation: string,\r\n        public recipeUrl: string,\r\n        public ingredients: Ingredient[]\r\n    ) { }\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IngredientDetail } from 'src/app/shared/models/ingredient-detail.model';\nimport { INGREDIENT_DETAIL_API_URL } from '../../../app.constants';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientDetailApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable<IngredientDetail[]> {\n    return this.http.get<IngredientDetail[]>(INGREDIENT_DETAIL_API_URL);\n  }\n\n  public getBy(id: number): Observable<IngredientDetail> {\n    return this.http.get<IngredientDetail>(INGREDIENT_DETAIL_API_URL + id);\n  }\n\n  public create(ingredientDetail: IngredientDetail): Observable<IngredientDetail> {\n    return this.http.post<IngredientDetail>(\n      INGREDIENT_DETAIL_API_URL,\n      JSON.stringify(ingredientDetail),\n      {\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n  }\n\n  public update(ingredientDetail: IngredientDetail): Observable<IngredientDetail> {\n    return this.http.put<IngredientDetail>(\n      INGREDIENT_DETAIL_API_URL + ingredientDetail.id,\n      JSON.stringify(ingredientDetail),\n      {\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n  }\n\n  public deleteBy(id: number): Observable<IngredientDetail> {\n    return this.http.delete<IngredientDetail>(INGREDIENT_DETAIL_API_URL + id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Meal } from '../../models/meal.model';\nimport { Observable } from 'rxjs';\nimport { MEAL_API_URL } from 'src/app/app.constants';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealApiService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable<Meal[]> {\n    return this.http.get<Meal[]>(MEAL_API_URL);\n  }\n\n  public getBy(id: number): Observable<Meal> {\n    return this.http.get<Meal>(MEAL_API_URL + id);\n  }\n\n  public create(meal: Meal): Observable<Meal> {\n    return this.http.post<Meal>(\n      MEAL_API_URL,\n      JSON.stringify(meal),\n      {\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n  }\n\n  public update(meal: Meal): Observable<Meal> {\n    return this.http.put<Meal>(\n      MEAL_API_URL + meal.id,\n      JSON.stringify(meal),\n      {\n        headers: { 'Content-Type': 'application/json' }\n      }\n    );\n  }\n\n  public deleteBy(id: number): Observable<Meal> {\n    return this.http.delete<Meal>(MEAL_API_URL + id);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}